name: ci pipeline

on:
    push:
        branches: [main,  dev]

    pull_request:
        branches: [main,  dev]

jobs:
    setup-build-test:
        name: setup, install & test
        strategy:
            matrix:
                os: [macos-latest]
                python-version: ['3.10', '3.11']
        runs-on: ${{ matrix.os }}
        env:
            EODHISTORICALDATA: ${{ secrets.EODHISTORICALDATA }}
            
        steps:
            #----------------------------------------------
            #       check-out repo and set-up python
            #----------------------------------------------
            - name: Check out repository  
              uses: actions/checkout@v3
            - name: setup python ${{ matrix.python-version }} for ${{ matrix.os }}
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}

            #----------------------------------------------
            #       install and configure poetry
            #----------------------------------------------
            - name: Install and configure poetry
              uses: snok/install-poetry@v1
              with:
                virtualenvs-create: true
                virtualenvs-in-project: true
                installer-parallel: true

            #----------------------------------------------
            #       install dependencies & code quality 
            #----------------------------------------------
            - name: Install dependencies
              run: |
                poetry install --with=dev --no-interaction --no-root
          
            #----------------------------------------------
            #       Activate virtualenv
            #----------------------------------------------
            - name: virtualenv activation
              run: |
                source .venv/bin/activate
                echo PATH=$PATH >> $GITHUB_ENV
              shell: bash

            #----------------------------------------------
            #       code quality
            #----------------------------------------------
            - name: code quality
              run: make lint && make format
              shell: bash
                
            #----------------------------------------------
            #       run tests 
            #----------------------------------------------
            - name: unit tests
              run: |
                source .venv/bin/activate
                pytest -s -q --disable-pytest-warnings -k "test_eodhd_init"
                pytest -s -q --disable-pytest-warnings -k "test_eodhd_invalidkeyerror"  
                pytest -s -q --disable-pytest-warnings -k "test_search"
                pytest -s -q --disable-pytest-warnings -k "test_exchange_traded_tickers"
                pytest -s -q --disable-pytest-warnings -k "test_ohlcv"
              shell: bash

